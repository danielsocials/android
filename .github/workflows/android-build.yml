name: android build

on:
  push:
    branch:
      - master

jobs:
  android_build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
            submodules: 'true'
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: |
            - /usr/local/lib/android
            - /opt/hostedtoolcache/jdk/
          key: ${{ runner.os }}-sdk
          restore-keys: ${{ runner.os }}-sdk
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: |
            - ~/.cache/pip
            - ~/.cache/chaquopy
            - ~/work/android/app/build/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip
      - name: build debug
        run: |
          yes | /usr/local/lib/android/sdk/tools/bin/sdkmanager "platforms;android-29"
          yes | /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;21.0.6113669" --sdk_root=${ANDROID_SDK_ROOT} >> /dev/null
          echo 'chaquopy.license=${{ secrets.CHAQUOPY_LICENSE }}' > local.properties
          echo 'sdk.dir=/usr/local/lib/android/sdk' >> local.properties
          ./gradlew app:assembleDebug
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: push to server
        run: |
            # push release apk
            export MAINNET_APK=`ls app/build/outputs/apk/MainNetOnekey/debug/*.apk`
            export TESTNET_APK=`ls app/build/outputs/apk/TestNetOnekey/debug/*.apk`
            export REGTEST_APK=`ls app/build/outputs/apk/RegTestOnekey/debug/*.apk`
            export CHANGE_LOG=`git log HEAD -n 1`
            scp "$MAINNET_APK" "$TESTNET_APK" "$REGTEST_APK" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/output/
            ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /output && ./push.sh $MAINNET_APK '\"$CHANGE_LOG\"' && ./push.sh $TESTNET_APK '\"$CHANGE_LOG\"' && ./push.sh $REGTEST_APK '\"$CHANGE_LOG\"'"
